h1 {
  color: green;
}

body {
  margin: 0;
  overflow: hidden;
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
  color: #333;

}

input:-webkit-autofill,
input:-webkit-autofill:hover, 
input:-webkit-autofill:focus,
textarea:-webkit-autofill,
textarea:-webkit-autofill:hover,
textarea:-webkit-autofill:focus,
select:-webkit-autofill,
select:-webkit-autofill:hover,
select:-webkit-autofill:focus {
  -webkit-box-shadow: 0 0 0px 1000px #f8f9fa inset;
  color: #555 !important;
}

.modal.show {
  display: block
}
span.highlight {
  font-style: italic;
  font-size: 18px;
  font-weight: bold;
}
.navbar {
  background-color: #3E1E68;
  color: white;
  display: flex;
  flex-wrap: wrap;

  .nav-item {
    flex: 50%; 
  }
  .nav-item:nth-child(2) {
    text-align: right;
  }
  .btn {
    background-color: white;
  }
  .btn:hover {
    color: black
  }
}
/*
input,
input:hover,
input:focus,
input:active,
input:-webkit-autofill,
input:-webkit-autofill:hover, 
input:-webkit-autofill:focus, 
input:-webkit-autofill:active  {
    -webkit-box-shadow: 0 0 0 30px #f8f9fa inset !important;
}
*/

.main-app {
  width: 100vw;
  height: 100vh;
  position: absolute;
  top: 0;
  left: 0;
}

.background {
  width: 100vw;
  height: 100vh;
  background: #3E1E68;
}

$particleSize: 30vmin;
$animationDuration: 6s;
$amount: 20;

.background svg {
  border-radius: $particleSize;
  backface-visibility: hidden;
  position: absolute;
  //animation-name: move;
  animation-duration: $animationDuration;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
  filter: blur(4px);
  $colors: (
    #583C87,
    #E45A84,
    #FFACAC
  );
  @for $i from 1 through $amount {
    &:nth-child(#{$i}) {
      fill: nth($colors, random(length($colors)));
      top: random(100) * 1%;
      left: random(100) * 1%;
      animation-duration: (random($animationDuration * 10) / 10) * 1s + 10s;
      animation-delay: random(($animationDuration + 10s) * 10) / 10 * -1s;
      transform-origin: (random(50) - 25) * 1vw (random(50) - 25) * 1vh;
      $blurRadius: (random() + 0.5) * $particleSize * 0.5;
      $x: if(random() > 0.5, -1, 1);
      width: $blurRadius;
      height: $blurRadius;
      //box-shadow: ($particleSize * 2 * $x) 0 $blurRadius currentColor;
    }
  }
}

@keyframes move {
  100% {
    transform: translate3d(0, 0, 1px) rotate(360deg);
  }
}